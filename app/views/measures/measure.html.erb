<% content_for :head do %>
  <script type="text/javascript">
function llog(x) {window.console.log(x)}    
    
    var popHealth = popHealth || {};
    
    popHealth.drawPctChart = function(data) {
        var elem = "#mcp";
        var numerator = data.numerator;
        var denominator = data.denominator;
        $(elem).empty();
        var percent = denominator > 0 ? (numerator/denominator).toFixed(2)*100 : 0;
        var percentStr = percent + "%"
        $.tmpl("${numerator} / ${denominator} patients = ${percentage}",{numerator:numerator,denominator:denominator,percentage:percentStr}).appendTo(elem);
        var bar = $("<div></div>",{className:"bar"});
        $("<div></div>",{className:"barVal",width:percentStr,html:"<span>"+percentStr+"</span>"}).appendTo(bar);
        $(elem).append(bar);
        $("#outcomeExclusionMarker").text(data.exceptions + " exclusion" + (data.exceptions = 1 ? "s":""));
        $("#eligibleCount").text(denominator);
        $("#outcomeCount").text(numerator);
    }
    
    
    popHealth.renderMeasureJSON = function(data) {
        var measure = data;
        $.getJSON("<%= measure_result_url(@definition['id'], @definition['sub_id']) %>",popHealth.drawPctChart);
        $("#measureTitleText").text(data.name);
        $("#measureDescText").text(data.description);

        var addParamItems = function(obj,elem,container) {
            if ("and" in obj) {
                for (var i=0; i < obj.and.length; i++) {
                    addParamItems(obj.and[i],elem);
                    if (i < obj.and.length-1) {
                        $(elem.children(".paramGroupContainer:last")).append($("#ph_tmpl_paramToggle").tmpl({id:$("input[type=checkbox]").length,val:"and"}));
                    }
                }
            } else {
                if ("or" in obj) {
                    if (!container) {
                        elem = $("#ph_tmpl_paramGroupContainer").tmpl({}).appendTo(elem);
                        $("#ph_tmpl_paramGroup").tmpl({}).appendTo(elem);   
                    }
                    for (var i=0; i < obj.or.length; i++) {
                        addParamItems(obj.or[i],elem.find(".paramGroup:last"),elem);
                        if (i < obj.or.length-1) {
                            $("#ph_tmpl_paramToggle").tmpl({id:$("input[type=checkbox]").length,val:"or"}).appendTo(elem.find(".paramGroup:last"));
                    }
                }
                } else {
                    if (!container) {
                        elem = $("#ph_tmpl_paramGroupContainer").tmpl({}).appendTo(elem);
                        elem = $("#ph_tmpl_paramGroup").tmpl({}).appendTo(elem);    
                    }
                    $("#ph_tmpl_paramItem").tmpl(obj).appendTo(elem);
                }
            }
            
        }
        
        if (data.population) {
            addParamItems(data.population,$("#eligibilityMeasureItems"));
        }
        if (!$.isEmptyObject(data.denominator)) {
            $("#ph_tmpl_paramToggle").tmpl({id:$("#eligibilityMeasureItems input[type=checkbox]").length,val:"and"}).appendTo("#eligibilityMeasureItems .paramGroupContainer:last");
            addParamItems(data.denominator,$("#eligibilityMeasureItems"));
        }

        if (data.numerator) {
            addParamItems(data.numerator,$("#outcomeMeasureItems"));
        }
        // turn checkboxes into sliding toggle switches
        makeToggleSliders();
    }
    
    $(document).ready(function() {
    
    //$.getJSON("json/bp.json",popHealth.renderMeasureJSON);
    $.getJSON("<%= measure_definition_url(@definition['id'], @definition['sub_id']) %>",popHealth.renderMeasureJSON);
    
    $("#measurementPeriodEndDate").val(new Date().format("mm/dd/yyyy"));
    $(".deleteParamIcon").click(popHealth.deleteParam);
    $("#btnSaveNewMeasure").click(popHealth.saveNewMeasure);
    $("#btnReturnToDash").click(popHealth.returnToDash);
    $("#measurementPeriodStartDate, #measurementPeriodEndDate").calendricalDate({usa:true});
    
});
    function makeToggleSliders() {
    $('.itoggle input').iToggle({
        type: 'checkbox',
        keepLabel: false,
        easing: 'easeOutExpo',
        speed: 300,
        onClick: function(){
            //Function here
        },
        onClickOn: function(){
            //Function here
        },
        onClickOff: function(){
            //Function here
        },
        onSlide: function(){
            //Function here
        },
        onSlideOn: function(){
            //Function here
        },
        onSlideOff: function(){
            //Function here
        }
    });
    }
    function alertDate(e) {
        alert("you changed me");
        }
  </script>
 <script type="text/html" id="ph_tmpl_paramItem">
        <div class="paramItem">
       <!-- ${percentage=Math.round(Math.random()*100,2)} -->
            {{if category}}<h4>${category}</h4>{{/if}}
            ${title}
        </div>
    </script>
    <script type="text/html" id="ph_tmpl_paramGroupContainer">
        <div class="paramGroupContainer">
        </div>
    </script>
    <script type="text/html" id="ph_tmpl_paramGroup">
            <div class="paramGroup">
            </div>
    </script>
    <script type="text/html" id="ph_tmpl_paramToggle">
        <div class="paramGroupToggle">
            <div class="itoggle" id="toggle_${id}">
                <input type="checkbox" id="param_cbox_${id}" ${val == "or" ? "" :"checked"}/>
            </div>
        </div>
    </script>
<% end %>

<div id="container">

    <%= render :partial => 'header', :locals => {:definition => @definition} %>
    
    <div id="pageContent">

        <%= render :partial => 'measure_title'%>

        <div id="measureEditContainer">
        <div id="eligibilityMeasures">
            <h3>Denominator: <span id="eligibleCount">0</span> patients</h3>
            <div class="measureBox">

            <div id="eligibilityMeasureItems">

                
            </div><!-- end #eligibilityMeasureItems -->
            </div><!-- end measureBox -->

        </div><!-- end #eligibilityMeasures -->
        
        <div id="outcomeMeasures">
            <h3>Numerator: <span id="outcomeCount">0</span> patients</h3>
            <div class="measureBox">
                <div id="outcomeExclusionMarker" class="exclusionTab">
                    0 Exclusions
                </div>
                <div id="outcomeMeasureItems">
                </div>
            </div><!-- end measureBox -->
        </div><!-- end #outcomeMeasures -->
        
    </div><!-- end measureEditContainer -->
    </div><!-- end #pageContent -->

</div>