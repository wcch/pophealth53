<% content_for :head do %>
  <script type="text/javascript">
    var popHealth = popHealth || {};

    popHealth.makeMeasureListExpandable = function() {
      $('#measureClassList li label').click(function(){
        $(this).toggleClass('open');
        if ($(this).hasClass('open')) {
          $(this).siblings('div.measureItemList').slideDown();
        } else {
          $(this).siblings('div.measureItemList').slideUp();
        }
      });
    };

    popHealth.makeMeasuresCheckable = function() {
      $('.measureItemList li').click(function(){
        var measureId = $(this).attr("data-measure-id");
        var category = $(this).data("category");
        var categoryLabel = $(".dashboardLabel").filter(function() {return this.innerHTML == category;});
        if ($(this).hasClass('checked')) {
          $.post('/measures/remove/' + measureId,
                 function(data) {
                   var measureTable = categoryLabel.next('table')
                   if (measureTable.children().children().length == 1) {
                     //since there is only one measure, we should remove the whole table
                     measureTable.remove();
                     categoryLabel.remove();
                   } else {
                     $('#measure' + measureId).remove();
                   };
          })
        }
        else {
          $.post('/measures/select/' + measureId,
                 function(data) {
                   if (categoryLabel.length != 0) {
                     categoryLabel.next('table').children().first().append(data);
                   } else {
                     $('.measureDetailTable').append($.tmpl($('#categoryTmpl'), {"category": category, "measureRow": data}));
                   };
                   popHealth.populateMeasureStats();
          })
        }
        $(this).toggleClass('checked');
      });
    };

    popHealth.updateStat = function(data, graphDiv) {
      var percent = data.denominator > 0 ? roundNumber(data.numerator/data.denominator*100,0) : 0;
      var numeratorWidth = (data.numerator/<%= @patient_count %>).toFixed(2)*100;
      var denominatorWidth = data.denominator > 0 ? roundNumber((data.denominator - data.numerator)/<%= @patient_count -%>*100,0) : 0;
      graphDiv.find(".numeratorValue").text(data.numerator);
      graphDiv.find(".denominatorValue").text(data.denominator);
      graphDiv.find(".measurePopulationPercentage").text(percent + "%");
      graphDiv.find(".tableBarNumerator").css("width", numeratorWidth + "%");
      graphDiv.find(".tableBarDenominator").css("width", denominatorWidth + "%");
    };
    
    popHealth.pollStat = function(resultUrl, graphDiv) {
      $.getJSON(resultUrl, function(data) {
        if (data.uuid == undefined) {
          popHealth.updateStat(data, graphDiv)
        } else {
          graphDiv.find(".measurePopulationPercentage").text(data.status);
          if (data.status!="failed") {
            setTimeout(function() {
              popHealth.pollStat(resultUrl, graphDiv);
            }, 1000)
          }
        }
      });
    };

    popHealth.populateMeasureStats = function() {
      $('.tableMeasureCtrl').each(function(index) {
        // Using attr() instead of data() because jQuery will convert the measure id to number
        // which strips the leading zeros.
        var measureId = $(this).attr("data-measure-id");
        var measureSubId = $(this).data("measure-sub-id");
        var uuid = $(this).data("calculation-job-uuid");
        var resultUrl = null;
        var graphDiv = $(this);

        if (uuid != undefined) {
          if(measureSubId == undefined) {
            resultUrl = "/measures/result/" + measureId + '?uuid=' + uuid;
          }
          else {
            resultUrl = "/measures/result/" + measureId + "/" + measureSubId + '?uuid=' + uuid;
          }
        
          popHealth.pollStat(resultUrl, graphDiv);
        };
      });
    }

    popHealth.exportReport = function() { window.location.href="/measures/report.xml"; };
    
    popHealth.changeMeasurePeriod = function() {
      var effective_date = $('#measurementPeriodEndDate').val();
      var period = {"effective_date": effective_date, "persist": true};
      $.post("/measures/period", period, function(data) {
        window.location.href="/measures";
      }); 
    };
    
    popHealth.updatePeriodEnd = function(selected) {
      var effective_date = $('#measurementPeriodEndDate').val();
      $.post("/measures/period", {"effective_date": effective_date, "persist": false}, function(data) {
        var period = JSON.parse(data);
        $('#measurementPeriodStartDate').text(period['start']);
      });
    };

    $(document).ready(function() {
      popHealth.makeMeasureListExpandable();
      popHealth.makeMeasuresCheckable();
      popHealth.populateMeasureStats();
      $('#btnExportReport').click(popHealth.exportReport);
      $('#measurementPeriodEndDate').calendricalDate({
        usa: true,
        changed: popHealth.updatePeriodEnd
      });
      $('#btnMeasurementPeriodChange').click(popHealth.changeMeasurePeriod);
      $(document).idleTimeout({
        inactivity: 300000,
        noconfirm: 10000,
        sessionAlive: false,
        alive_url: '/',
        redirect_url: '<%= destroy_user_session_path %>',
        logout_url: '/logout.html'
      });
    });
  </script>
<% end -%>

<div id="dashboardContainer">
<!-- add a comment -->
  <div id="header">
    <div id="breadcrumbBox">
      <ul id="breadcrumbItems">
      <li>measure dashboard</li>
      </ul>
      <%= render :partial => 'layouts/top_nav' %>
    </div><!-- end #breadcrumbBox -->
  </div><!-- end #header -->
  <div id="pageContent">
    <div id="providerReports">
      <h1>Reporting</h1>
      <p class="note">Core Measures <em>(select 3)</em></p>
      <div class="measureList">
      <div class="measureItemList">
         <ul>
         <% @core_measures.each do |measure| -%>
           <li class="<%= measure_selected(measure['id'], @selected_measures)%>" data-measure-id="<%= measure['id'] %>" data-category="Core"><%= measure['name'] %></li>
         <% end %>
         <% @core_alt_measures.each do |measure| -%>
           <li class="<%= measure_selected(measure['id'], @selected_measures)%>" data-measure-id="<%= measure['id'] %>" data-category="Core Alternate"><span class="note">**</span><%= measure['name'] %></li>
         <% end %>
         </ul>
      <p class="note"><em>** core alternate measures</em></p>
      </div>
      </div>
      <p class="note">Additional Measures <em>(select 3)</em></p>
      <div class="measureList">
        <ul id="measureClassList">
        <% @categories.each do |category| -%>
          <li><label><%= category['category'] %></label>
            <div class="measureItemList" style="display:none">
              <ul>
              <% category['measures'].each do |measure| -%>
                <li class="<%= measure_selected(measure['id'], @selected_measures)%>" data-measure-id="<%= measure['id'] %>" data-category="<%= category['category'] %>"><%= measure['name'] %></li>
              <% end -%>
              </ul>
            </div>
        <% end -%>
        </ul>
      </div><!-- end #measureList -->
    </div><!-- end #providerReports -->
    <div id="dashboardPeriod">
      <div class="measureDetailTable">
        <h1><%= current_user.company.to_s %></h1>
        <dl>
          <input type="button" class="exportReport" value="Export Report" id="btnExportReport">
          <dt>Reporting Period:</dt>
          <dd>
            <span id="measurementPeriodStartDate"><%= Time.at(@period_start).strftime("%m/%d/%Y") %></span> - 
            <input type="text" class="measurementPeriodEndDate" id="measurementPeriodEndDate" size="6" value="<%= Time.at(@effective_date).strftime("%m/%d/%Y") %>">
            <input type="button" class="recalculate" id="btnMeasurementPeriodChange" value="Recalculate">
          </dd>
        </dl>
        <dl>
          <dt>Reporting Patients: </dt>
          <dd><%= @patient_count %></dd>
        </dl>
        <div class="clear"></div>
        <div class="legend">
          <div class="numerator"></div><span>numerator</span>
          <div class="denominator"></div><span>denominator</span>
          <div class="patients"></div><span>reporting patients</span>
          <div class="exclusions"></div><span>exclusions</span>
        </div>
        <br/>
        <% @grouped_selected_measures.each_pair do |category, measures| -%>
          <h3 class="dashboardLabel"><%= category %></h3>
          <table>
            <% measures.each do |measure| -%>
              <%= render :partial => 'measure_stats', :locals => {:measure => measure} %>
            <% end -%>
          </table>
        <% end -%>
      </div><!-- end #measureDetailTable -->
    </div><!-- end #dashboardPeriod -->
  </div><!-- end #pageContent -->
</div><!-- end #container -->
<script id="categoryTmpl" type="text/x-jquery-tmpl">
    <h3 class="dashboardLabel">${category}</h3>
    <table>
      {{html measureRow}}
    </table>
</script>